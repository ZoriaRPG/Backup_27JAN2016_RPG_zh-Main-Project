int ReturnStringCharPos(int str, int chr){
	for ( int q = 0; q <= strlen(str-1); q ++ ) {
		int a = str[q];
		if ( a == chr ) return q;
	}
}



const int CHAR_NULL 		= 0; //NULL char, end of string.
const int CHAR_SOH 		= 1; //Start of heading.
const int CHAR_STX 		= 2; //Start of text.
const int CHAR_ETX		= 3; //End of text.
const int CHAR_EOT 		= 4; //End of transmission. 
const int CHAR_ENQ		= 5; //Enquiry
const int CHAR_ACK		= 6; //Acknowledge
const int CHAR_BELL		= 7; //Bell tone.
const int CHAR_BACKSPACE	= 8;
const int CHAR_TAB 		= 9;
const int CHAR_LF		= 10; //Line feed, new line.
const int CHAR_NEWLINE		= 10;
const int CHAR_VTAB 		= 11; //Vertical tab.
const int CHAR_FF		= 12; //Form feed, new page.
const int CHAR_FORMFEED		= 12;
const int CHAR_CR 		= 13; //Carriage return.
const int CHAR_RETURN		= 13;
const int CHAR_SHIFTOUT		= 14;
const int CHAR_SHIFTIN		= 15;
const int CHAR_DLE		= 16; //Data Link Escape
const int CHAR_DEVCONT1		= 17; //Device Control 1
const int CHAR_DEVCONT2		= 18; //Device Control 2
const int CHAR_DEVCONT3		= 19; //Device Control 3
const int CHAR_DEVCONT4		= 20; //Device Control 4
const int CHAR_NEGACK		= 21; //Negative acknowledge.
const int CHAR_SYNCIDLE 	= 22; //Synchronous idle.
const int CHAR_ENDTRANSBLOCK	= 23; //End of transmission block.
const int CHAR_CANCEL		= 24; //Cancel
const int CHAR_ENDMEDIUM	= 25; //End of medium.
const int CHAR_EM		= 25; //End of medium.
const int CHAR_SUB		= 26; //Substiture
const int CHAR_SUBSTITUTE	= 26;
const int CHAR_ESC		= 27; //Escape char.
const int CHAR_FS		= 28; //File separator.
const int CHAR_FILESEP		= 28; 
const int CHAR_GROUPSEP 	= 29;
const int CHAR_GS 		= 29; //Group separator.
const int CHAR_RECORDSEP 	= 30;
const int CHAR_RS 		= 30; //Record separator.
const int CHAR_UNITSEP 		= 31;
const int CHAR_US 		= 31; //Unit separaor
const int CHAR_SPACE 		= 32;
const int CHAR_BANG 		= 33; //Bang sign (!)
const int CHAR_DQUOTE 		= 34; //Double-quote (")
const int CHAR_HASH 		= 35; //Hash sign (#)
const int CHAR_DOLLAR 		= 36; //Dollar sign ($)
const int CHAR_PERCENT 		= 37; //Percent sign (%)
const int CHAR_AND		= 38; //And sign (&)
const int CHAR_QUOTE		= 39; //Single quote (')
const int CHAR_LPAREN		= 40; //Left paren
const int CHAR_RPAREN		= 41; //Right paren
const int CHAR_STAR		= 42; //Star (multiply) sign (*)
const int CHAR_PLUS		= 43; //Plus sign (+)
const int CHAR_COMMA		= 44; //Comma (,)
const int CHAR_MINUS		= 45; //Minus (-)
const int CHAR_DOT		= 46; //Dot (.)
const int CHAR_FSLASH		= 47; //Forward slash (/)
const int CHAR_0		= 48; //Numerals
const int CHAR_1		= 49;
const int CHAR_2		= 50;
const int CHAR_3		= 51;
const int CHAR_4		= 52;
const int CHAR_5		= 53;
const int CHAR_6		= 54;
const int CHAR_7		= 55;
const int CHAR_8		= 56;
const int CHAR_9		= 57;
const int CHAR_COLON		= 58; //Colon (:)
const int CHAR_SCOLON		= 59; //Semicolon (;)
const int CHAR_LESSTHAN		= 60; //Less than (<)
const int CHAR_EQUALS		= 61; //Equals (=)
const int CHAR_MORETHAN		= 62; //More than (>)
const int CHAR_QUESTION		= 63; //Question mark (?)
const int CHAR_ATSIGN		= 64; //At sign (@)
const int CHAR_A		= 65; //Uppercase Alpha
const int CHAR_B		= 66;
const int CHAR_C		= 67;
const int CHAR_D		= 68;
const int CHAR_E		= 69;
const int CHAR_F		= 70;
const int CHAR_G		= 71;
const int CHAR_H		= 72;
const int CHAR_I		= 73;
const int CHAR_J		= 74;
const int CHAR_K		= 75;
const int CHAR_L		= 76;
const int CHAR_M		= 77;
const int CHAR_N		= 78;
const int CHAR_O		= 79;
const int CHAR_P		= 80;
const int CHAR_Q		= 81;
const int CHAR_R		= 82;
const int CHAR_S		= 83;
const int CHAR_T		= 84;
const int CHAR_U		= 85;
const int CHAR_V		= 86;
const int CHAR_W		= 87;
const int CHAR_X		= 88;
const int CHAR_Y		= 89;
const int CHAR_Z		= 90;
const int CHAR_LBRACE		= 91; //Left brace ([)
const int CHAR_BSLASH		= 92; //Backslash (\)
const int CHAR_RBRACE		= 93; //Right brace (])
const int CHAR_CARET		= 94; //Caret (^)
const int CHAR_UNDERSCORE	= 95; //Underscore (_)
const int CHAR_GRAVE		= 96; //Grave (`)
const int CHAR_a		= 97; //Lowercase alpha.
const int CHAR_b		= 98;
const int CHAR_c		= 99;
const int CHAR_d		= 100;
const int CHAR_e		= 101;
const int CHAR_f		= 102;
const int CHAR_g		= 103;
const int CHAR_h		= 104;
const int CHAR_i		= 105;
const int CHAR_j		= 106;
const int CHAR_k		= 107;
const int CHAR_l		= 108;
const int CHAR_m		= 109;
const int CHAR_n		= 110;
const int CHAR_o		= 111;
const int CHAR_p		= 112;
const int CHAR_q		= 113;
const int CHAR_r		= 114;
const int CHAR_s		= 115;
const int CHAR_t		= 116;
const int CHAR_u		= 117;
const int CHAR_v		= 118;
const int CHAR_w		= 119;
const int CHAR_x		= 120;
const int CHAR_y		= 121;
const int CHAR_z		= 122;
const int CHAR_LCURLYBR		= 123; //Left curly brace ({)
const int CHAR_PIPE 		= 124; //Pipe (|)
const int CHAR_RCURLYBR		= 125; //Right curly brace (})
const int CHAR_TILDE		= 126; //Tilde (~)
const int CHAR_UNUSED 		= 127; //Last of Standard ASCII Map